const axios = require('axios');
async function getVideo(link) {
  var url = await getUrl(link)
  const response = await axios.get(url, {
    headers: {
      authority: 'www.facebook.com',
      accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-US,en;q=0.9',
      'cookie': 'datr=NPkSZDlOJ7U32SBcnw4ucybJ; wd=749x489',
      'sec-ch-prefers-color-scheme': 'light',
      'sec-ch-ua': '',
      'sec-ch-ua-mobile': '?0',
      'sec-ch-ua-platform': 'Windows',
      'sec-fetch-dest': 'document',
      'sec-fetch-mode': 'navigate',
      'sec-fetch-site': 'none',
      'sec-fetch-user': '?1',
      'upgrade-insecure-requests': '1',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36 Edg/111.0.1661.43',
    },
  })
  var content = response.data;
  var reaction_un = content.split('"top_reactions":{"edges":[')[1].split(']}')[0];
  var title = content.split('<title>')[1].split('</title>')[0];
  var data = JSON.parse('[' + reaction_un + ']');
  var reaction = get_reaction(data);
  var url = content.split('"playable_url_quality_hd":"')[1].split('"')[0];
  var url_video = decode(url);
  var comment = content.split('"comment_count":{"total_count":')[1].split(',')[0];
  var view = content.split('"video_view_count":')[1].split(',')[0];
  var thumbail_video = decode(content.split('"image":{"uri":"')[1].split('"')[0]);
  var author_all = content.split('"profile_url"')[1];
  var name = author_all.split(',"name":"')[1].split('"')[0].replace(/\\u([\d\w]{4})/gi, (match, grp) => String.fromCharCode(parseInt(grp, 16)));
  var id = author_all.split('"owner_as_page":')[1].split('"id":"')[1].split('"')[0];
  var avatar = decode(author_all.split('"uri":"')[1].split('"')[0]);
  var data = { video: { title, reaction, view, comment, url_video, thumbail_video }, author: { id, name, avatar } }
  return data
}


function get_reaction(data) {
  var reaction_json = "";
  for (let i = 0; i < data.length; i++) {
    var a = data[i].node.localized_name;
    var b = data[i].reaction_count;
    let c = [`"${a}":${b}`]
    if (i < data.length - 1) {
      c += ','
    }
    reaction_json += c
  }
  return JSON.parse('{' + reaction_json + '}', null, 2)
}


function decode(url_uncode) {
  var decode1 = replace_all(url_uncode, "\\/", "/");
  var decode2 = replace_all(decode1, ";", "&");
  var url_video = replace_all(decode2, "\\u0025", "%");
  return url_video
}


function replace_all(text, repl, repl2) {
  const getLen = text.split(repl).length - 1;
  for (let i = 0; i < getLen; i++) {
    text = text.replace(repl, repl2);
  }
  return text;
}

async function getUrl(link) {
  if (link.includes("fb")) {
    var res = await axios.get(link)
    var bao = res.data;
    var url_id_video = `${decodeURIComponent(bao.split('<link rel="alternate" hreflang="be" href="')[1].split('"')[0])}`;
    var id_video = `${decodeURIComponent(url_id_video)}`;
    var video_id = id_video.split('/')[6];
    var linkbasic = `https://www.facebook.com/${video_id}`
    return linkbasic;
  } else {
    var spLink = link.split('/');
    var id_video = "";
    spLink.map((value, index) => {
      if (isNaN(parseInt(value)) != true && value.length > 10) {
        if (value.includes('?')) id_video = value.split('?')[0];
        else id_video = value;
      }
    });
    var linkbasic = `https://www.facebook.com/${id_video}`;
    return linkbasic;
  }
};
exports.getInfo = getVideo